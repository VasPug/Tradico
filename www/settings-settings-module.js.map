{"version":3,"sources":["./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings.module.ts","./src/app/pages/settings/settings.page.scss","./src/app/pages/settings/settings.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0oDAA2kD,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjjD;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;ACzB/B;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApJ;AACV;AACT;AAOzC;IAGE,sBAAoB,OAAgB,EAAU,WAAwB;QAAlD,YAAO,GAAP,OAAO,CAAS;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFtE,aAAQ,GAAG,EAAE,CAAC;IAE4D,CAAC;IAE3E,+BAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,aAAG;YAC5C,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;IAED,qCAAc,GAAd;QACE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;;gBAd4B,sDAAO;gBAAuB,kEAAW;;IAH3D,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kLAAmC;;SAEpC,CAAC;yCAI6B,sDAAO,EAAuB,kEAAW;OAH3D,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB","file":"settings-settings-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>Settings</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content class=\\\"ion-padding\\\">\\n  \\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>\\n          Currency\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list>\\n          <ion-radio-group [(ngModel)]=\\\"currency\\\">\\n  \\n            <ion-item>\\n              <ion-label>Euro</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"eur\\\" checked></ion-radio>\\n            </ion-item>\\n  \\n            <ion-item>\\n              <ion-label>Dollar</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"usd\\\"></ion-radio>\\n            </ion-item>\\n  \\n            <ion-item>\\n              <ion-label>Pound</ion-label>\\n              <ion-radio slot=\\\"start\\\" value=\\\"gbp\\\"></ion-radio>\\n            </ion-item>\\n          </ion-radio-group>\\n        </ion-list>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"updateCurrency()\\\">\\n          Update\\n        </ion-button>\\n      </ion-card-content>\\n    </ion-card>\\n  \\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>\\n          Clear Data\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        Remove all data?\\n        <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"clearData()\\\">\\n          Clear Data\\n        </ion-button>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-content>\\n  \";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { CashService } from './../../services/cash.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  currency = '';\n\n  constructor(private storage: Storage, private cashService: CashService) { }\n\n  ngOnInit() {\n    this.storage.get('selected-currency').then(val => {\n      this.currency = val;\n    })\n  }\n\n  updateCurrency() {\n    this.cashService.updateCurrency(this.currency);\n  }\n\n  clearData() {\n    this.cashService.clearData();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}